/*! Made with Bones: http://themble.com/bones :) */

/******************************************************************
Site Name:
Author:

Stylesheet: Main Stylesheet

Here's where the magic happens. Here, you'll see we are calling in
the separate media queries. The base mobile goes outside any query
and is called at the beginning, after that we call the rest
of the styles inside media queries.

Helpful articles on Sass file organization:
http://thesassway.com/advanced/modular-css-naming-conventions

******************************************************************/

@import "compass";
@import "breakpoint";
@import "singularitygs";
@import "toolkit-no-css";

@import "compass/utilities/general/clearfix";
/*********************
IMPORTING PARTIALS
These files are needed at the beginning so that we establish all
our mixins, functions, and variables that we'll be using across
the whole project.
*********************/
@import "partials/*";
//  partials/_namespace -- describe a my std's (common for all projects vars, function, font-faces, etc)

//Project Specific
/* =======
   Units
   ======= */

$u_pt: 12;
$u_em: 1;
$u_px: 16;
$u_percentage: 100%;

@function ptem($pt, $basept: $u_pt){
  @return ($pt/$basept*$u_px)+0px;
}
@function pxem($px, $basepx: $u_px){
  @return ($px/$basepx)+0em;
}

/* ========
   Mixin
   ======== */

//@mixin sexy-border($color, $width: 1in) {
//  border: {
//    color: $color;
//    width: $width;
//    style: dashed;
//  }
//}
//p { @include sexy-border(blue); }

@mixin bk-scale($img) {
  filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(src=$img, sizingMethod='scale');
  -ms-filter: "progid:DXImageTransform.Microsoft.AlphaImageLoader(src=#{$img}, sizingMethod='scale')";
  background-size: 100%;
}
@mixin bk-shadow($shadows...) {
  -moz-box-shadow: $shadows;
  -webkit-box-shadow: $shadows;
  box-shadow: $shadows;
}
@mixin hoverbox_table($target: '.field--image', $expression: '&:last-child',
$max_width: 470px,
$container_width: 228px, $container_height: 160px) {
  #{$target}:hover img {
    position: absolute;
    z-index: 50;
    width: $max_width;
    height: auto;
    max-width: $max_width;
    padding: 2px;
    background: #fefefe;
  }
  #{$target}:hover {
    display:block;
    padding-top: 80px;
    padding-left: 100px;
    width: 100%;
    height: $container_height;
    //width: $container_width;
    border:1px solid #454649;
  }
  #{$target}:nth-child(5n):hover {padding-right: 100px; padding-left: 0;}
  //Hand Last sting in the bottom of the page
  #{$expression} #{$target}:hover {
    padding-top: 15px;
  }
}
@mixin hoverbox_div($target: '.field--image', $expression: '&:last-child',
$max_width: 470px,
$container_width: 228px, $container_height: 160px) {
  #{$target}:hover img {
    position: absolute;
    z-index: 50;
    width: $max_width;
    height: auto;
    max-width: $max_width;
    padding: 2px;
    background: #fefefe;
  }
  #{$target}:hover {
    display:block;
    padding-top: 80px;
    width: $container_width;
    border:1px solid #454649;
  }
  #{$target}:nth-child(5n):hover {padding-right: 100px; padding-left: 0;}

  //Hand Last sting in the bottom of the page
  #{$expression} #{$target}:hover {
    padding-top: 15px;
  }
}
@mixin hoverbox($target: '.field--image', $max_width: 470px,
$container_width: 228px, $container_height: 160px) {
  #{$target}:hover img {
    position: absolute;
    z-index: 50;
    width: $max_width;
    height: auto;
    max-width: $max_width;
    padding: 2px;
    background: #fefefe;
  }
  #{$target}:hover {
    display:block;
    padding-top: 80px;
    padding-left: 100px;
    //width: 100%;
    height: $container_height;
    width: $container_width;
    border:1px solid #454649;
  }
  #{$target}:nth-child(5n):hover {padding-right: 100px; padding-left: 0;}
}

@mixin backimg($img_name) {
  background: url('#{$img-root}#{$img_name}') repeat-y fixed 0 0 ;
  filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(src='#{$img-root}main_back_origin.jpg', sizingMethod='scale');
  -ms-filter: "progid:DXImageTransform.Microsoft.AlphaImageLoader(src='#{$img-root}main_back_origin.jpg', sizingMethod='scale')";
  background-size: 100%;
}

@mixin bk-scale($img) {
  filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(src=$img, sizingMethod='scale');
  -ms-filter: "progid:DXImageTransform.Microsoft.AlphaImageLoader(src=#{$img}, sizingMethod='scale')";
  background-size: 100%;
}
@mixin bk-shadow($shadows...) {
  -moz-box-shadow: $shadows;
  -webkit-box-shadow: $shadows;
  box-shadow: $shadows;
}
@mixin hr-line ($top: 100%, $left: 0){
  position: relative;

  &:after {
    content: ' ';
    width: 100%;
    background: url('#{$img-root}hr-line.png')  repeat-x;
    height: 8px;

    position: absolute;
    top: $top;
    left: $left;
  }
}

/* =======
   Units
   ======= */

$u_pt: 12;
$u_em: 1;
$u_px: 16;
$u_percentage: 100%;

@function ptem($pt, $basept: $u_pt){
  @return ($pt/$basept*$u_px)+0px;
}
@function pxem($px, $basepx: $u_px){
  @return ($px/$basepx)+0em;
}

/* ============
    Colors
    =========== */

$color_t_std: #3a6087;
$color_t_link: #1400FF;
$color_t_link_hover: #6a78ff;

$color_bk_body: #f5f5f5;

/* ============
    Fonts
    =========== */
$font_head: 'Calibri';
$font_h: Times New Roman, Arial, $sans-serif;
$font_text: Times New Roman, $sans-serif;

$font_size_14: (14/16);


/*********************
IMPORTING MODULES
Modules are reusable blocks or elements we use throughout the project.
We can break them up as much as we want or just keep them all in one.
I mean, you can do whatever you want. The world is your oyster. Unless
you hate oysters, then the world is your peanut butter & jelly sandwich.
*********************/
@import "modules/**/*";

/*********************
BASE (MOBILE) SIZE
This are the mobile styles. It's what people see on their phones. If
you set a great foundation, you won't need to add too many styles in
the other stylesheets. Remember, keep it light: Speed is Important.
*********************/

@import "breakpoints/break_on_layout";

/* ===============
    Querys
    ============= */

//@media only screen and (min-width: 768px) {}
//@media only screen and (min-width: 1140px) {}

/*********************
RETINA (2x RESOLUTION DEVICES)
This applies to the retina iPhone (4s) and iPad (2,3) along with
other displays with a 2x resolution. You can also create a media
query for retina AND a certain size if you want. Go Nuts.
*********************/
@media only screen and (-webkit-min-device-pixel-ratio: 1.5),
       only screen and (min--moz-device-pixel-ratio: 1.5),
       only screen and (min-device-pixel-ratio: 1.5) {

	// styles in 2x.scss
	@import "breakpoints/2x";

} // end of media query

/*********************
PRINT STYLESHEET
Feel free to customize this. Remember to add things that won't make
sense to print at the bottom. Things like nav, ads, and forms should
be set to display none.
*********************/
@media print {

	// styles in print.scss
	@import "partials/add/print";

}
